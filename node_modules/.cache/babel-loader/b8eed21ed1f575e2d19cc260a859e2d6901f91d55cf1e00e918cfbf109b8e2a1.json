{"ast":null,"code":"var _jsxFileName = \"/Users/miroshnikovm/Desktop/dev/yandex bootcamp/react-burger/src/components/ProductContainer/ProductContainer.jsx\";\nimport ElementItem from \"../ElementItem/ElementItem\";\nimport styles from \"./styles.modules.css\";\nimport BurgerIngredient from \"../BurgerIngredient/BurgerIngredient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProductContainer(props) {\n  const {\n    elements,\n    handleOnSelect,\n    isOpen,\n    ...otherProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ElementItem, {\n      elements: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ProductContainer;\nexport default ProductContainer;\n{\n  /* <ElementItem elements={elements} /> */\n}\n\n/* \nreturn (\n  <>\n    <div className={`${styles.scrollContainer} custom-scroll`}>\n      <p className=\"text text_type_main-medium\">Булки</p>\n      <ul className={styles.container}>\n        {elements.map((element) => {\n          if (element.type === \"bun\") {\n            return (\n              <BurgerIngredient\n                ingredient={element}\n                key={element._id}\n                handleOnSelect={handleOnSelect}\n                isOpen={isOpen}\n              />\n            );\n          }\n        })}\n      </ul>\n      <p className=\"text text_type_main-medium\">Соусы</p>\n      <ul className={styles.container}>\n        {elements.map((element) => {\n          if (element.type === \"sauce\") {\n            return (\n              <BurgerIngredient\n                ingredient={element}\n                key={element._id}\n                handleOnSelect={handleOnSelect}\n                isOpen={isOpen}\n              />\n            );\n          }\n        })}\n      </ul>\n      <p className=\"text text_type_main-medium\">Начинки</p>\n      <ul className={styles.container}>\n        {elements.map((element) => {\n          if (element.type === \"main\") {\n            return (\n              <BurgerIngredient\n                ingredient={element}\n                key={element._id}\n                handleOnSelect={handleOnSelect}\n                isOpen={isOpen}\n              />\n            );\n          }\n        })}\n      </ul>\n    </div>\n  </>\n); */\nvar _c;\n$RefreshReg$(_c, \"ProductContainer\");","map":{"version":3,"names":["ElementItem","styles","BurgerIngredient","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductContainer","props","elements","handleOnSelect","isOpen","otherProps","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/miroshnikovm/Desktop/dev/yandex bootcamp/react-burger/src/components/ProductContainer/ProductContainer.jsx"],"sourcesContent":["import ElementItem from \"../ElementItem/ElementItem\";\nimport styles from \"./styles.modules.css\";\nimport BurgerIngredient from \"../BurgerIngredient/BurgerIngredient\";\n\nfunction ProductContainer(props) {\n  const { elements, handleOnSelect, isOpen, ...otherProps } = props;\n\n  return (\n    <>\n      <ElementItem elements={elements} />\n    </>\n  );\n}\n\nexport default ProductContainer;\n\n{\n  /* <ElementItem elements={elements} /> */\n}\n\n/* \nreturn (\n  <>\n    <div className={`${styles.scrollContainer} custom-scroll`}>\n      <p className=\"text text_type_main-medium\">Булки</p>\n      <ul className={styles.container}>\n        {elements.map((element) => {\n          if (element.type === \"bun\") {\n            return (\n              <BurgerIngredient\n                ingredient={element}\n                key={element._id}\n                handleOnSelect={handleOnSelect}\n                isOpen={isOpen}\n              />\n            );\n          }\n        })}\n      </ul>\n      <p className=\"text text_type_main-medium\">Соусы</p>\n      <ul className={styles.container}>\n        {elements.map((element) => {\n          if (element.type === \"sauce\") {\n            return (\n              <BurgerIngredient\n                ingredient={element}\n                key={element._id}\n                handleOnSelect={handleOnSelect}\n                isOpen={isOpen}\n              />\n            );\n          }\n        })}\n      </ul>\n      <p className=\"text text_type_main-medium\">Начинки</p>\n      <ul className={styles.container}>\n        {elements.map((element) => {\n          if (element.type === \"main\") {\n            return (\n              <BurgerIngredient\n                ingredient={element}\n                key={element._id}\n                handleOnSelect={handleOnSelect}\n                isOpen={isOpen}\n              />\n            );\n          }\n        })}\n      </ul>\n    </div>\n  </>\n); */\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,4BAA4B;AACpD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,gBAAgB,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpE,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/B,MAAM;IAAEC,QAAQ;IAAEC,cAAc;IAAEC,MAAM;IAAE,GAAGC;EAAW,CAAC,GAAGJ,KAAK;EAEjE,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACJ,WAAW;MAACS,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBAClC;AAEP;AAACC,EAAA,GARQX,gBAAgB;AAUzB,eAAeA,gBAAgB;AAE/B;EACE;AAAA;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}