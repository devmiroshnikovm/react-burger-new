{"ast":null,"code":"var _jsxFileName = \"/Users/miroshnikovm/Desktop/dev/yandex bootcamp/react-burger/src/components/Modal/Modal.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./styles.module.css\";\nimport ModalOverlay from \"../ModalOverlay/ModalOverlay\";\nimport ModalHeader from \"../ModalHeader/ModalHeader\";\nimport { createPortal } from \"react-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.getElementById(\"react-modals\");\nconst plug = {\n  title: \"test\"\n};\nfunction Modal(props) {\n  _s();\n  const {\n    header,\n    onClose\n  } = props;\n  const [domReady, setDomReady] = useState(false);\n  function handleButtonClick() {\n    console.log(\"click\");\n  }\n  useEffect(() => {\n    // Код эффекта\n    setDomReady(true);\n    console.log(\"Mounted\");\n\n    // Код сброса\n    return () => {\n      // отписка от событий, закрытие соединений\n    };\n  }, []);\n  return domReady ? /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.popupContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerCloseWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text text_type_main-large\",\n          onClick: handleButtonClick,\n          children: header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true), modalRoot) : null;\n}\n_s(Modal, \"sInHPu7VALXtiM+xaCTNej5NoIo=\");\n_c = Modal;\nexport default Modal;\n{\n  /* <div className={`${styles.headerCloseWrapper} pl-10 pt-10 pr-10`}>\n  <ModalHeader header={header} />\n  <button>close</button>\n  </div> \n    <div>{props.children}</div>\n   */\n}\n{\n  /* <ModalHeader onClose={onClose} header={header} />\n  <button className={styles.close}></button> */\n}\n{\n  /* <div className={styles.popupContainer}>\n  <ModalHeader onClose={onClose} header={header} />\n  <button className={styles.close}></button>\n  <div className={styles.editContent}>test</div>\n  </div> */\n}\n{\n  /* <ModalOverlay>\n  <div>test</div>\n  </ModalOverlay>\n  <Backdrop /> */\n}\n\n/* example \nfunction LifecycleFunction() {\n  React.useEffect(() => {\n    console.log('Mounted');\n    return () => {\n      console.log('Will unmount');\n    };\n  }, []); // Empty array means to only run once on mount.\n  return (\n    <div>Lifecycle Function</div>\n  );\n} */\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["styles","ModalOverlay","ModalHeader","createPortal","useState","useEffect","CloseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","modalRoot","document","getElementById","plug","title","Modal","props","_s","header","onClose","domReady","setDomReady","handleButtonClick","console","log","children","className","popupContainer","headerCloseWrapper","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/miroshnikovm/Desktop/dev/yandex bootcamp/react-burger/src/components/Modal/Modal.jsx"],"sourcesContent":["import styles from \"./styles.module.css\";\nimport ModalOverlay from \"../ModalOverlay/ModalOverlay\";\nimport ModalHeader from \"../ModalHeader/ModalHeader\";\n\nimport { createPortal } from \"react-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nconst modalRoot = document.getElementById(\"react-modals\");\n\nconst plug = {\n  title: \"test\",\n};\n\nfunction Modal(props) {\n  const { header, onClose } = props;\n\n  const [domReady, setDomReady] = useState(false);\n\n  function handleButtonClick() {\n    console.log(\"click\");\n  }\n\n  useEffect(() => {\n    // Код эффекта\n    setDomReady(true);\n    console.log(\"Mounted\");\n\n    // Код сброса\n    return () => {\n      // отписка от событий, закрытие соединений\n    };\n  }, []);\n\n  return domReady\n    ? createPortal(\n        <>\n          <div className={styles.popupContainer}>\n            <div className={styles.headerCloseWrapper}>\n              <p\n                className=\"text text_type_main-large\"\n                onClick={handleButtonClick}\n              >\n                {header}\n              </p>\n              <CloseIcon />\n            </div>\n            <div>{props.children}</div>\n          </div>\n\n          <ModalOverlay />\n        </>,\n        modalRoot\n      )\n    : null;\n}\n\nexport default Modal;\n\n{\n  /* <div className={`${styles.headerCloseWrapper} pl-10 pt-10 pr-10`}>\n<ModalHeader header={header} />\n<button>close</button>\n</div> \n\n   <div>{props.children}</div>\n   */\n}\n\n{\n  /* <ModalHeader onClose={onClose} header={header} />\n<button className={styles.close}></button> */\n}\n\n{\n  /* <div className={styles.popupContainer}>\n<ModalHeader onClose={onClose} header={header} />\n<button className={styles.close}></button>\n\n<div className={styles.editContent}>test</div>\n</div> */\n}\n\n{\n  /* <ModalOverlay>\n<div>test</div>\n</ModalOverlay>\n<Backdrop /> */\n}\n\n/* example \nfunction LifecycleFunction() {\n  React.useEffect(() => {\n    console.log('Mounted');\n    return () => {\n      console.log('Will unmount');\n    };\n  }, []); // Empty array means to only run once on mount.\n  return (\n    <div>Lifecycle Function</div>\n  );\n} */\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/E,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;AAEzD,MAAMC,IAAI,GAAG;EACXC,KAAK,EAAE;AACT,CAAC;AAED,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGH,KAAK;EAEjC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAASmB,iBAAiBA,CAAA,EAAG;IAC3BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB;EAEApB,SAAS,CAAC,MAAM;IACd;IACAiB,WAAW,CAAC,IAAI,CAAC;IACjBE,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;;IAEtB;IACA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOJ,QAAQ,gBACXlB,YAAY,eACVK,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAKmB,SAAS,EAAE3B,MAAM,CAAC4B,cAAe;MAAAF,QAAA,gBACpClB,OAAA;QAAKmB,SAAS,EAAE3B,MAAM,CAAC6B,kBAAmB;QAAAH,QAAA,gBACxClB,OAAA;UACEmB,SAAS,EAAC,2BAA2B;UACrCG,OAAO,EAAEP,iBAAkB;UAAAG,QAAA,EAE1BP;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL,eACJ1B,OAAA,CAACF,SAAS;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,eACN1B,OAAA;QAAAkB,QAAA,EAAMT,KAAK,CAACS;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eAEN1B,OAAA,CAACP,YAAY;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACf,EACHvB,SAAS,CACV,GACD,IAAI;AACV;AAACO,EAAA,CAzCQF,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA2Cd,eAAeA,KAAK;AAEpB;EACE;AACF;AACA;AACA;AACA;AACA;AALE;AASF;EACE;AACF;AADE;AAIF;EACE;AACF;AACA;AACA;AACA;AAJE;AAQF;EACE;AACF;AACA;AACA;AAHE;;AAMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}